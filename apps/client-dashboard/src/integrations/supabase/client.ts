// This file is automatically generated. Do not edit it directly.
import { createClient } from "@supabase/supabase-js";
import type { Database } from "./types";

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error("Missing Supabase environment variables. Please check .env file.");
  
  // In development, provide fallback values to prevent app crash
      if (import.meta.env.MODE === 'development') {
    console.warn("Using fallback Supabase configuration for development");
  } else {
    throw new Error("Missing Supabase environment variables. Please check .env file.");
  }
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL || "https://placeholder.supabase.co",
  SUPABASE_PUBLISHABLE_KEY || "placeholder-key",
  {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
      debug: import.meta.env.MODE === 'development' && import.meta.env.VITE_ENABLE_SUPABASE_DEBUG === 'true',
    },
    realtime: {
      params: {
        eventsPerSecond: 10,
      },
      heartbeatIntervalMs: 30000,
      reconnectAfterMs: (tries: number) => Math.min(tries * 1000, 30000),
    },
    global: {
      fetch: (url, options = {}) => {
        const enableVerbose = import.meta.env.MODE === 'development' && import.meta.env.VITE_ENABLE_SUPABASE_DEBUG === 'true';
        if (enableVerbose) {        }
        return fetch(url, {
          ...(options as any),
          keepalive: false,
        }).then(res => {
          if (enableVerbose) {          }
          return res;
        });
      },
    },
  },
);


